#################################################
# Organization Web Server Run/Go Live Playbook
#################################################
---
- hosts: all
  connection: local
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    # run static site container
    - name: Run static site container - nginx
      # restart already running container if it exists, or create it
      shell: docker restart static.site || docker run -d --restart always -p {{ static_site_port }}:80 static.site
      become: true
      become_user: root
      args:
        chdir: /srv/site_deploy/containers/static

    # run grav
    - name: Run grav container
      # restart already running container if it exists, or create it
      shell: docker restart grav:latest || docker run -d -p {{ grav_port }}:80 --restart always -v grav_data:/srv/site_deploy/containers/data grav:latest
      become: true
      become_user: root
      args:
        chdir: /srv/site_deploy/containers/grav

    # run mailcow
    - name: Build mailcow container
      shell: docker-compose pull
      become: true
      become_user: root
      args:
        chdir: /srv/site_deploy/containers/mailcow-dockerized

    - name: Run mailcow container detatched
      shell: docker-compose up -d
      become: true
      become_user: root
      args:
        chdir: /srv/site_deploy/containers/mailcow-dockerized

    # run discourse
    - name: Run discourse container 
      shell: ./launcher rebuild app
      become: true
      become_user: root
      args:
        chdir: /srv/site_deploy/containers/discourse_docker


    # Start caddy as a service
    - name: Enable caddy service
      service:
        name: caddy
        enabled: yes

    - name: Start caddy service
      service:
        name: caddy
        state: started

    - debug:
        msg: |
          All services and containers are now live!
          Please see POST_INSTALL.MD for following up on deployment.
